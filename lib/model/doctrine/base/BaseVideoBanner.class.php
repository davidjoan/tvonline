<?php

/**
 * BaseVideoBanner
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $video_id
 * @property integer $banner_id
 * @property Video $Video
 * @property Banner $Banner
 * 
 * @method integer     getVideoId()   Returns the current record's "video_id" value
 * @method integer     getBannerId()  Returns the current record's "banner_id" value
 * @method Video       getVideo()     Returns the current record's "Video" value
 * @method Banner      getBanner()    Returns the current record's "Banner" value
 * @method VideoBanner setVideoId()   Sets the current record's "video_id" value
 * @method VideoBanner setBannerId()  Sets the current record's "banner_id" value
 * @method VideoBanner setVideo()     Sets the current record's "Video" value
 * @method VideoBanner setBanner()    Sets the current record's "Banner" value
 * 
 * @package    tvonline
 * @subpackage model
 * @author     David Joan Tataje Mendoza <new.skin007@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVideoBanner extends DoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('t_video_banner');
        $this->hasColumn('video_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             'primary' => true,
             ));
        $this->hasColumn('banner_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             'primary' => true,
             ));

        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Video', array(
             'local' => 'video_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Banner', array(
             'local' => 'banner_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}